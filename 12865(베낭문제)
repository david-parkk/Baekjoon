#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;


vector<pair<int, int>> vec;

int dp[101][100001] = { 0 };
int arr1[100001];
int arr2[100001];

int main() {
	cin.tie(NULL);
	ios::sync_with_stdio(false);
	
	int N, K;

	cin >> N >> K;
	for (int i = 1; i <= N; i++) {
		cin >> arr1[i] >> arr2[i];
	}

	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= K; j++) {
			if (arr1[i] > j) {
				dp[i][j] = dp[i - 1][j];
			}
			else {
				dp[i][j] = max({ (arr2[i] + dp[i - 1][j-arr1[i]]),dp[i - 1][j]});
			}
		}
	}
	/*
	cout << endl;
	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= K; j++) {
			cout << dp[i][j] << ", ";


		}
		cout << endl;
	}*/
	cout << dp[N][K];
	return 0;
}
