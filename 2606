#include<iostream>
#include<queue>
using namespace std;

pair <int, int>* arr;
int* arr1;
int comcount, compair;
int tocount = 0;
int firseco = 0;
void dfs1(int start) {
	arr1[start - 1] = 1;
	tocount++;
	
	for (int i = 0; i < compair; i++) {
		if (arr[i].first == start) {
			if(arr1[arr[i].second-1]==0){
			dfs1(arr[i].second);
			}
		}
		else if (arr[i].second == start) {
			if (arr1[arr[i].first-1] == 0) {
				dfs1(arr[i].first);
			}
		}
	}
}

int main() {
	int startindex=0;
	cin >> comcount >> compair;
	arr = new pair <int, int>[compair];
	arr1 = new int[comcount];
	for (int i = 0; i < comcount; i++) {
		arr1[i] = 0;//배열 초기화
	}
	for (int i = 0; i < compair; i++) {
		
		cin >> arr[i].first >> arr[i].second;
		if (arr[i].first == 1) {
			startindex = i;
			firseco = 1;
		}
		else if (arr[i].second == 1) {
			startindex = i;
			firseco = 2;
		}
		
	}
	dfs1(1);
	cout << tocount-1;
	return 0;
}
