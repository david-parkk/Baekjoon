#include<iostream>


using namespace std;

int memo[1000000];

void bottomup(int num) {
	for (int i = 3; i < num; i++) {
		if ((i+1) % 6 == 0) {
			memo[i]= min(memo[((i+1) / 2)-1], min(memo[((i + 1) / 3-1)], memo[(i + 1) - 2])) + 1;
		//	cout << "a";
		}
		else if ((i + 1) % 3 == 0) {
			memo[i] = min(memo[((i + 1) / 3 - 1)], memo[(i + 1) - 2])+1;
			//cout << "a";
		}
		else if ((i + 1) % 2 == 0) {
			memo[i] = min(memo[((i + 1) / 2) - 1], memo[(i + 1) - 2])+1;
			//cout << "a";
		}
		else {
			memo[i] = memo[(i + 1) - 2]+1;
			//cout << "a";
		}
	}
	//return memo[num - 1];
}
int downtop(int num) {
	
	/*if (num == 1)
		return 0;*/
	if (num == 2|| num == 3) {
		return 1;
	}
	if (memo[num-1] !=0) {
		//cout << "asdf" << endl;
		return memo[num-1];
	}
//	cout << num << endl;
	//int maxa= downtop(num-1);
	/*if (num % 6 == 0) {
		memo[num - 1] = min(downtop(num / 2, memo), downtop(num / 3, memo))+1;
	}
	else if (num % 2==0) {
		memo[num - 1] = min(downtop(num / 2, memo), downtop(num-1, memo))+1;
	}
	else if (num % 3 == 0) {
		memo[num - 1] = min(downtop(num / 3, memo), downtop(num - 1, memo))+1;
	}
	else {
		memo[num - 1] = downtop(num - 1, memo)+1;
	}*/
	int num1 = 100;
	int num2 = 100;
	int num3 = downtop(num - 1);
	if (num % 3 == 0) {
		num1 = downtop(num / 3);
	}
	if (num % 2 == 0) {
		num2 = downtop(num / 2);
	}
	memo[num - 1] = min(num1, min(num2, num3))+1;
	
	return memo[num-1];

}
int main() {
	
	int num;
	cin >> num;
	//memo = new int[num];
	memo[0] = 0;
	memo[1] = 1;
	memo[2] = 1;
	//memo[0] = 0;
	
	
	bottomup(num);
	printf("%d",memo[num-1] );
	//delete memo;
	return 0;
}
