#include<iostream>
#include<queue>
using namespace std;
int arr[101][101] = { 0 };
queue<int>que[10000];
int head, rel;
int cabin[101] = { 0 };

void bfs(int num) {
	int visited[101] = { 0 };
	int cal[101] = { 0 };
	//cout << "total : " << bfs()+1 << endl;
	visited[num] = 1;
	while (!que->empty()) {
		int topp = que->front();
		que->pop();
		
		for (int j = 1; j < 101; j++) {
			if (arr[topp][j] == 1&&visited[j]==0) {
				que->push(j);
				visited[j] = 1;
				//cout << j << endl;
				cal[j] += cal[topp] + 1;
			}
		}
		
	}
	int total = 0;
	for (int i = 1; i < 101; i++) {
		total+=cal[i];
	}
	//cout << "total: " << total << endl;
	cabin[num] = total;
}
int main() {

	cin >> head >> rel;
	int row, col;

	for (int i = 0; i < rel; i++) {
		cin >> row >> col;
		arr[row][col] = 1;
		arr[col][row] = 1;
	}


	for (int i = 1; i < 101; i++) {
		for (int j = 1; j < 101; j++) {
			if (arr[i][j] == 1&&cabin[i]==0) {
				//cout << "asdf :"<<i << endl;
				que->push(i);
				bfs(i);
				
			}

		}
	}
	for (int i = 1; i < rel + 1; i++) {
		
		
		//cout << "Asdf" << endl << endl;


	}
	for (int i = 1; i < 101; i++) {
		//cout << "나옴 : " << cabin[i] << endl;
	}
	int maxindex = 1;
	for (int i = 1; i < 101; i++) {
		if (cabin[i] < cabin[maxindex]&&cabin[i]!=0)
			maxindex = i;
	}
	cout << maxindex;
	return 0;
}
